A changelog for recent builds as pasted into the sourceforge page.

Generally created by hand after running:
   cvs -z5 log -rb20x: > log.out
   {py_dir}\Tools\scripts\logmerge.py -t < log.out > log.out2
However contributors are encouraged to add their own entries for their work.

Build 208
---------
* pywintypes: fix reference leak in PyOVERLAPPED objects.
* isapi: fix memory leak; filter "load order" handling; error
  rendering.
* pythonwin: Disable some old DDE hacks to prevent Data Execution Prevention 
  (DEP) errors in Pythonwin.
* odbc: gets support for Unicode, corrects support for BIT, and 
  SQLDataSources() method.
* win32job: New win32job module for access to the win32 "job" functions
* win32inet: Add WinHttpGetIEProxyConfigForCurrentUser()
* pythoncom.Empty now does what it implies - passes a variant with VT_EMPTY.
  New pythoncom.ArgNotFound supports the old behaviour (of VT_ERROR with
  DISP_E_PARAMNOTFOUND); CoInitializeEx change described in Build 206 was 
  not implemented - now it is!
* win32com: large unsigned ints may previously have been returned as negative
  Python integers; makepy no longer displays a GUI progress dialog by default.
* win32com.authorization: New package from Roger Upole.
* win32com.mapi: New IProviderAdmin support from John Nielsen; add
  IMAPIStatus support
* win32com.shell: Allow SHFileOperation to accept a string containing 
  multiple file names, prevent Windows handle leak in IQueryAssociations.
* win32com.adsi: Always return extended error info when available, and expose
  ADsGetLastError explicitly.
* Leonard Ritter and Robert Förtsch contributed some IE extension samples
  (see win32com\demos)
* .chm documentation now includes a link to search MSDN and google for many 
  API functions
* Many other minor fixes and enhancements.

Build 207
--------
* Fix an error in win32gui.CreateDC() arg handling, introduced with the
  Windows CE changes in build 206.

Build 206
--------
* Prevent the "display name" of a COM object ever being Unicode and
  therefore a possible cause of unexpected Unicode decode errors.
* Correct and document behaviour of CoInitializeEx/CoInitialize exception 
  throwing behaviour - previously a failure would leave a stale Python 
  exception.
* Fix memory leak when doing str(PySID) (Roger Upole)
* New IE Toolbar demo contributed by Leonard Ritter, plus a few new
  AXControl related interfaces that were necessary.
* win32timezone now works in non-English Windows versions.  timezone
  objects can now be pickled (Jason Coombs)
* Prevent stale Windows errors causing win32api.GetConsoleTitle() to fail.
* Remove workaround for Python bug so we again write a file encoding to 
  makepy generated files in all Python versions.
* New win32gui function CreateIconFromResource.
* Add win32file.QueryDosDevice (Roger Upole)
* Fix error when using win32pipe in a "bundled" py2exe app.
* Better support for py2exe based services, including debugging support.
* Add support for all VARIANT types in COM arrays (a few were missing)
* GetBitmapBits() can return a string or a list (a string being *much* 
  faster)
* Fix win32gui taskbar demo to handle the fact explorer may not (yet) be 
  running.
* win32 directory should again build on Windows CE (Luke Dunstan)
* Support for IGlobalInterfaceTable (Stefan Schukat)
* A number of pythonwin framework enhancements (Adal Chiriliuc)
* Better Auto-Complete list in pythonwin for COM objects (Jerry Gamache)
* win32api.GetVersionEx takes an optional param - if 1, we return a longer 
  tuple representing the OSVERSIONINFOEX structure.

Build 205
---------
* Introduce support for Python's 'decimal' module when working with
  COM 'currency' objects - see the included .chm for more details.
* More reliable loading of pywintypes/pythoncom when these files are not in 
  system32
* Allow datetime objects to be passed directly to COM functions without 
  requiring explicit conversion.
* New win32crypt module for access to the windows crypto functions.
* New win32console module (Roger Upole)
* New win32com.shell.shell methods and leaks fixed, new win32gui methods
  (Roger Upole)
* pywin32.version.txt file installed, and all .dll, .pyd and .exe files
  are stamped with the pywin32 version number.
* Number of build related changes to work with the latest Platform SDK.
* Fix reference leaks when using OVERLAPPED objects with completion ports.
* win32api.GetConsoleTitle() now returns an empty string instead of
  (0, "No Error")
* makepy didn't catch all Dispatchable interfaces, and now doesn't die
  if a dependent typelib can not be loaded.
* win32com 'universal gateway' support did not handle byref args correctly.
* Fix [ 1208530 ] PyBitmap.GetBitmapBits Memory Leak
* [ 1208081 ] Fix: WaitForServiceStatus doesn't work for remote boxes
* Pythonwin patch from Matthias Haldimann: if there is a selection, use 
  that as the default search string.
* Lots of win32com.adsi enhancements.
* Tweaks to the new isapi support.
* Many other minor fixes and enhancements - see the CVS log for more
  details

Build 204
---------
ChangeLog:
* New 'sspi' functions from Roger Upole which allow you to perform NTLM and
  Kerberos authentication.
* DirectSound interface contributed by Lars Immisch.
* New winxptheme module wrapping the Windows XP theme API.
* Fix bug in commctrl.py which caused many notification message values to have
  an incorrect value.  See the release notes for more information.
* Functions that returned HWND, HDC or other similar objects would raise an
  exception with "no error" whenever a handle of 0 was returned. We now only
  raise an exception when a real win32 error happens, and simply return the zero
  handle otherwise.
* More new win32gui functions (as usual!)
* ActiveDebugging enhancements from Kiriakos Vlahos.
* Python services will no longer have %System32% as the CWD when they start
  (the directory of the hosting exectutable will be used instead).  This should
  prevent ImportError due to DLLs in that System32 directory being found for
  Python imports.
* Services can specify a description that appears in win2k and later 'services'
  UI.
* All event log entries written by services report the "source" as the service
  name (previously it was always "Python Service")
* win32/scripts/verstamp.py is now useful stand-alone.
* Fix error that would cause Pythonwin to fill the registry with thousands
  of toolbar related entries.
* Correct error shutting down Pythonwin in Python 2.4
* DispatchWithEvents would always regenerate makepy module
* Fix memory leaks in the new ifilter module.
* ISAPI extension works correctly with IIS6
* win32print fixes and enhancements from Roger.
* Yet more corrections for Windows NT.

Release Notes:
This is a new build of the Python for Windows extensions.  Important notes:

* If you have implemented a GUI application which uses Common Controls, and you
  handle notification messages for these controls, a bug recently fixed in
  commctrl may impact you. Key constants in commctrl.py (eg, NM_DBLCLK) had
  incorrect values which are now correct. If your own code references these
  constants, you may be working around this bug and your code will need review.

  If your WM_NOTIFY handling code previously has something like:
     code += 0x4f0000
  You should change it to:
     code += commtrl.PY_OU
  Which will work in all pywin32 versions.  The adjustment can be removed
  if you want to work only with build 204 or later (as PY_OU is correctly
  zero in that version).  Alternatively, look at using
  win32gui_struct.UnpackWMNOTIFY()
  
  I apologize for this, but keeping incorrect constant values in commctrl.py
  would be the wrong thing to do.

* Files generated by makepy in Python 2.4 will not declare an encoding.  This
  is to work around Python bug http://www.python.org/sf/1163244.  If you use
  COM objects that use extended characters, a warning will be generated.

See the change log for minor changes.

Build 203
---------
* Phil Frantz contributed the start of an ISAPI framework - you can
  now implement ISAPI filters and extensions in Python! (only for
  Python 2.3 and later builds).  See the installed Help file, or
  see the site-packages\isapi\samples directory.
* Roger Upole fixed a number of security bugs, and allowed the security
  modules to again be used on NT.
* David Bolen restored service functionality for Windows NT.
* The win32gui, win32security, and win32service modules all again work
  on Windows NT.
* Roger Upole continued to enhance win32print.
* The command-line args for our service module now allow 'start' and 'stop'
  to specify a '--wait' option - this will prevent the program terminating
  until the service completely starts/stops.
* Support for CreateTypeLib2 contributed by Phil Rittenhouse.
* COM servers which specify a typelib to load now also provide this
  type-info to the caller via GetTypeInfo.
* win32api.GetLongPathName() support unicode filenames longer than MAXPATH
* win32gui gets lots of new functions.
* New 'winxpgui' module - almost identical to win32gui, but has a
  Windows XP manifest included, and a couple of extra functions not
  supported by Windows NT (AnimateWindow, FlashWindowEx, etc)
* win32gui and win32com allow a 'logger' object to be set, so unhandled 
  exceptions are reported to it instead of to stderr.
* win32trace module and permon data modules now works in a terminal services 
  environment.
* Thanks to Enzhou Wang, the pythoncom/pywintypes .h and .lib files
  are now installed.
* Add win32api.GetComputerNameEx() and win32api.GetComputerObjectName()
* ActiveDirectory interfaces get an upgrade and new samples.
* Fix a couple of potential buffer overflows for huge input strings.
* Fix a crash in the dbi/odbc modules.
* Pythonwin debugger should be less inclined to fill the registry with
  garbage.
* source distribution should now be complete.
* setup_win32all.py now should build correctly for most people.
* Fix more installation errors.

And lots of other bug fixes and enhancements too numerous to list here!

Build 202
---------
* Installation now works on "non-admin" installs of Python, and also
  on Windows 9x.
* Include taskscheduler and shell demos.
* New win32inet module, which provides an interface to the Microsoft
  Internet related "wininet" API.
* Many more security related functions by Roger Upole.
* New module that interfaces to Microsoft Index Server.
* Fix a bug that could cause large COM safe-arrays to crash
* Fix a number of memory leaks in COM
* shell.SHBrowseForFolder() now supports the callback param, ShellExecuteEx
  added, and a number of other shell module enhancements.
* win32trace should not lose as much data when huge amounts are being spewed.
* Add support for sorting listview controls with a sort callback.
* A number of new win32gui methods
* win32rc_parser handles icons and bitmaps etc, and also MSVC7 .rc files.
* objects from the standard 'datetime' module can be used whenever a win32 
  time object is needed.
* Work better when frozen with py2exe.
* Add win32file.FindFilesIterator(), which creates an iterator based
  around FindFirstFile/FindNextFile.  Useful for huge directories.
* Fix a number of bugs relating to large integers.
* win32api.GetFullPathName() will use GetFullPathNameW, and return a Unicode 
  object if passed a Unicode arg.

// This file declares the INameSpaceTreeControl Interface and Gateway for Python.
// Generated by makegw.py
// ---------------------------------------------------
//
// Interface Declaration

class PyINameSpaceTreeControl : public PyIUnknown
{
public:
	MAKE_PYCOM_CTOR(PyINameSpaceTreeControl);
	static INameSpaceTreeControl *GetI(PyObject *self);
	static PyComTypeObject type;

	// The Python methods
	static PyObject *Initialize(PyObject *self, PyObject *args);
	static PyObject *TreeAdvise(PyObject *self, PyObject *args);
	static PyObject *TreeUnadvise(PyObject *self, PyObject *args);
	static PyObject *AppendRoot(PyObject *self, PyObject *args);
	static PyObject *InsertRoot(PyObject *self, PyObject *args);
	static PyObject *RemoveRoot(PyObject *self, PyObject *args);
	static PyObject *RemoveAllRoots(PyObject *self, PyObject *args);
	static PyObject *GetRootItems(PyObject *self, PyObject *args);
	static PyObject *SetItemState(PyObject *self, PyObject *args);
	static PyObject *GetItemState(PyObject *self, PyObject *args);
	static PyObject *GetSelectedItems(PyObject *self, PyObject *args);
	static PyObject *GetItemCustomState(PyObject *self, PyObject *args);
	static PyObject *SetItemCustomState(PyObject *self, PyObject *args);
	static PyObject *EnsureItemVisible(PyObject *self, PyObject *args);
	static PyObject *SetTheme(PyObject *self, PyObject *args);
	static PyObject *GetNextItem(PyObject *self, PyObject *args);
	static PyObject *HitTest(PyObject *self, PyObject *args);
	static PyObject *GetItemRect(PyObject *self, PyObject *args);
	static PyObject *CollapseAll(PyObject *self, PyObject *args);

protected:
	PyINameSpaceTreeControl(IUnknown *pdisp);
	~PyINameSpaceTreeControl();
};
// ---------------------------------------------------
//
// Gateway Declaration

class PyGNameSpaceTreeControl : public PyGatewayBase, public INameSpaceTreeControl
{
protected:
	PyGNameSpaceTreeControl(PyObject *instance) : PyGatewayBase(instance) { ; }
	PYGATEWAY_MAKE_SUPPORT2(PyGNameSpaceTreeControl, INameSpaceTreeControl, IID_INameSpaceTreeControl, PyGatewayBase)



	// INameSpaceTreeControl
	STDMETHOD(Initialize)(
		HWND hwndParent,
		RECT * prc,
		DWORD nsctsFlags);

	STDMETHOD(TreeAdvise)(
		IUnknown * punk,
		DWORD * pdwCookie);

	STDMETHOD(TreeUnadvise)(
		DWORD dwCookie);

	STDMETHOD(AppendRoot)(
		IShellItem * psiRoot,
		DWORD grfEnumFlags,
		DWORD grfRootStyle,
		IShellItemFilter * pif);

	STDMETHOD(InsertRoot)(
		int iIndex,
		IShellItem * psiRoot,
		DWORD grfEnumFlags,
		DWORD grfRootStyle,
		IShellItemFilter * pif);

	STDMETHOD(RemoveRoot)(
		IShellItem * psiRoot);

	STDMETHOD(RemoveAllRoots)(
		void);

	STDMETHOD(GetRootItems)(
		IShellItemArray ** ppsiaRootItems);

	STDMETHOD(SetItemState)(
		IShellItem * psi,
		DWORD nstcisMask,
		DWORD nstcisFlags);

	STDMETHOD(GetItemState)(
		IShellItem * psi,
		DWORD nstcisMask,
		DWORD * pnstcisFlags);

	STDMETHOD(GetSelectedItems)(
		IShellItemArray ** psiaItems);

	STDMETHOD(GetItemCustomState)(
		IShellItem * psi,
		int * piStateNumber);

	STDMETHOD(SetItemCustomState)(
		IShellItem * psi,
		int iStateNumber);

	STDMETHOD(EnsureItemVisible)(
		IShellItem * psi);

	STDMETHOD(SetTheme)(
		LPCWSTR pszTheme);

	STDMETHOD(GetNextItem)(
		IShellItem * psi,
		DWORD nstcgi,
		IShellItem ** ppsiNext);

	STDMETHOD(HitTest)(
		POINT * ppt,
		IShellItem ** ppsiOut);

	STDMETHOD(GetItemRect)(
		IShellItem * psi,
		RECT * prect);

	STDMETHOD(CollapseAll)(
		void);

};
